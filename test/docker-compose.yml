version: '3'
services:
  postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      restbase_test_network:
        ipv4_address: "10.5.0.5"

  mysql_test_base:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_DATABASE: test_db
      MYSQL_ROOT_PASSWORD: password
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10
    ports:
      - "3306:3306"
    networks:
      restbase_test_network:
        ipv4_address: "10.5.0.6"

  postgres_test_base:
    image: postgres
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      restbase_test_network:
        ipv4_address: "10.5.0.2"

  api:
    build:
      context: ..
      dockerfile: Dockerfile
    depends_on:
      postgres_test_base:
        condition: service_healthy
      postgres:
        condition: service_healthy
      mysql_test_base:
        condition: service_healthy
    environment:
      STAGE: test
    ports:
      - "54541:54541"
      - "5432:5432"
    networks:
      restbase_test_network:
        ipv4_address: "10.5.0.3"

  tests:
    build:
      context: ..
      dockerfile: Dockerfile_tests
    depends_on:
      - postgres_test_base
      - api
      - postgres
      - mysql_test_base
    networks:
      restbase_test_network:
        ipv4_address: "10.5.0.4"

networks:
  restbase_test_network:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/27
          gateway: 10.5.0.1
